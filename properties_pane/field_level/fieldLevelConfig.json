/*
* Copyright © 2016-2019 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
{
	"lowerTab": "JsonDetails",
	"structure": {
		"text": [
			"name",
			"code",
			"schemaId",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"string",
					"varchar",
					"char"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "JSON Types",
				"propertyKeyword": "subtype",
				"propertyType": "select",
				"options": [
					{
						"name": " ",
						"value": "string"
					},
					{
						"name": "object",
						"value": "object"
					},
					{
						"name": "array",
						"value": "array"
					}
				],
				"defaultValue": "string",
				"dependency": {
					"key": "mode",
					"value": "string"
				}
			},
			"format",
			"pattern",
			"minLength",
			"maxLength",
			"enum",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "block",
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [{
								"key": "compositePrimaryKey",
								"value": false
							}, {
								"key": "compositePrimaryKey",
								"exist": false
							}]
						},
						{
							"type": "or",
							"values": [{
								"key": "compositeUniqueKey",
								"value": false
							}, {
								"key": "compositeUniqueKey",
								"exist": false
							}]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Not enforced",
						"propertyKeyword": "notEnforced",
						"propertyType": "checkbox",
						"propertyTooltip": "Databricks takes no action to enforce it for existing or new rows."
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyType": "checkbox",
						"propertyTooltip": "The constraint enforcement can be deferred."
					},
					{
						"propertyName": "Initially Deferrable",
						"propertyKeyword": "initiallyDeferrable",
						"propertyType": "checkbox",
						"propertyTooltip": "Constraint enforcement is deferred."
					},
					{
						"propertyName": "No rely",
						"propertyKeyword": "noRely",
						"propertyType": "checkbox",
						"propertyTooltip": "Databricks does not exploit the constraint to rewrite a query."
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"numeric": [
			"name",
			"code",
			"schemaId",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"tinyint",
					"smallint",
					"int",
					"bigint",
					"float",
					"double",
					"decimal"
				],
				"data": "options",
				"valueType": "string"
			},
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			{
				"propertyName": "Precision",
				"propertyKeyword": "precision",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"dependency": {
					"key": "mode",
					"value": "decimal"
				}
			},
			{
				"propertyName": "Scale",
				"propertyKeyword": "scale",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"dependency": {
					"key": "mode",
					"value": "decimal"
				}
			},
			"pattern",
			"unit",
			"enum",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"fieldName": "Default",
				"fieldKeyword": "default",
				"shouldValidate": true,
				"fieldType": "text",
				"regex": "(?:\\s|\\d|\\S)+"
			},
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"",
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "As identity",
						"propertyKeyword": "asIdentity",
						"propertyType": "checkbox"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"dependency": {
							"type": "and",
							"values": [
								{
									"key": "generatedType",
									"value": "always"
								},
								{
									"type": "or",
									"values": [
										{
											"key": "asIdentity",
											"value": false
										},
										{
											"key": "asIdentity",
											"exist": false
										}
									]
								}
							]
						}
					},
					{
						"propertyName": "Identity",
						"propertyType": "block",
						"propertyKeyword": "identity",
						"propertyTooltip": "",
						"structure": [
							{
								"propertyName": "Start with",
								"propertyKeyword": "start_num",
								"propertyType": "text",
								"valueType": "number",
								"allowNegative": false
							},
							{
								"propertyName": "Increment by",
								"propertyKeyword": "step_num",
								"propertyType": "text",
								"valueType": "number",
								"allowNegative": false
							}
						],
						"dependency": {
							"key": "asIdentity",
							"value": true
						}
					}
				]
			},
			"dependencies",
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"bool": [
			"name",
			"code",
			"schemaId",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"binary": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"___1": [],
		"timestamp": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"",
					"timestamp_ntz"
				],
				"data": "options",
				"valueType": "string",
				"dependency": [
					{
						"level": "model",
						"key": "dbVersion",
						"value": "Runtime 13"
					},
					{
						"level": "model",
						"key": "dbVersion",
						"value": "Runtime 14"
					}
				]
			},
			"pattern",
			"enum",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"date": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			"pattern",
			"enum",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"interval": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			"pattern",
			"enum",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			"default",
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"___2": [],
		"array": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "subtype",
				"propertyType": "select",
				"options": [
					"array<txt>",
					"array<num>",
					"array<bin>",
					"array<ts>",
					"array<date>",
					"array<intrvl>",
					"array<array>",
					"array<map>",
					"array<struct>",
					"array<union>"
				]
			},
			"minItems",
			"maxItems",
			"uniqueItems",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"additionalItems",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"map": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			{
				"propertyName": "Key type",
				"propertyKeyword": "keyType",
				"propertyType": "select",
				"options": [
					"",
					"text",
					"numeric"
				]
			},
			{
				"propertyName": "Key subtype",
				"propertyKeyword": "keySubtype",
				"propertyType": "select",
				"options": [
					"string",
					"varchar",
					"char"
				],
				"dependency": {
					"key": "keyType",
					"value": "text"
				}
			},
			{
				"propertyName": "Key subtype",
				"propertyKeyword": "keySubtype",
				"propertyType": "select",
				"options": [
					"tinyint",
					"smallint",
					"int",
					"bigint",
					"float",
					"double",
					"decimal"
				],
				"dependency": {
					"key": "keyType",
					"value": "numeric"
				}
			},
			{
				"propertyName": "Value type",
				"propertyKeyword": "subtype",
				"propertyType": "select",
				"options": [
					"map<txt>",
					"map<num>",
					"map<bin>",
					"map<bool>",
					"map<ts>",
					"map<date>",
					"map<intrvl>",
					"map<array>",
					"map<map>",
					"map<struct>",
					"map<union>"
				]
			},
			"minProperties",
			"maxProperties",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"dependencies",
			"additionalProperties",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		],
		"struct": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"type",
			"dependencies",
			"minProperties",
			"maxProperties",
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true 
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "primaryKey",
							"value": true
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Check constraint",
				"propertyKeyword": "check",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Check constraint name",
				"propertyKeyword": "checkConstraintName",
				"propertyType": "text"
			},
			{
				"propertyName": "Generated as",
				"propertyTooltip": "",
				"propertyKeyword": "generatedDefaultValue",
				"propertyType": "block",
				"structure": [
					{
						"propertyName": "Type",
						"propertyKeyword": "generatedType",
						"propertyType": "select",
						"options": [
							"always",
							"by default"
						],
						"defaultValue": "always"
					},
					{
						"propertyName": "Expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			"additionalProperties",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Column Tags",
				"propertyKeyword": "unityColumnTags",
				"propertyTooltip": "Contains all the tags that have been applied to all the catalogs within the metastore.",
				"propertyType": "group",
				"groupItemLimit": 20,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "unityTagKey",
						"propertyTooltip": "The key of the tag. The key length must be between 1 and 127 UTF-8 characters, inclusive",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "unityTagValue",
						"propertyTooltip": "The value of the tag. The value length must be less than or equal to 255 UTF-8 characters.",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false,
						"shouldValidate": true,
						"validation": {
							"regex": "^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$",
							"maxLength": 255
						}
					}
				]
			}
		]
	}
}